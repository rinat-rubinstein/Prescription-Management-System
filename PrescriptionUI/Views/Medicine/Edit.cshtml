@model PrescriptionUI.Models.MedicineViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/OptionsLayout.cshtml";
}
@if (ViewBag.Message != null)
{
    <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.Message");
            };
    </script>

}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
}
<section class="ftco-section">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 mb-5 ftco-animate fadeInUp ftco-animated">
                <a class="image-popup"><img src="@Url.Content(Model.Picture)" class="img-fluid" alt="Colorlib Template"></a>
            </div>
            <div class="col-lg-6 product-details pl-md-5 ftco-animate fadeInUp ftco-animated">
                <p>
                    Name:

                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </p>
                <p>
                    Producer:

                    @Html.EditorFor(model => model.Producer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Producer, "", new { @class = "text-danger" })
                </p>
                <p>
                    Generic Name:
                    @Html.EditorFor(model => model.GenericName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GenericName, "", new { @class = "text-danger" })
                </p>
                <p>
                    Active Ingredients
                    @Html.EditorFor(model => model.ActiveIngredients, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActiveIngredients, "", new { @class = "text-danger" })
                </p>
                <p>
                    Portion Properties:
                    @Html.EditorFor(model => model.PortionProperties, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PortionProperties, "", new { @class = "text-danger" })
                </p>
                <p>
                    Picture:
                    <div class="input-group">
                        <div class="custom-file">
                            @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "custom-file-label" })
                            <input type="file" class="custom-file-input" id="img" name="ImageFile" accept="image/*">
                            <label class="custom-file-label" for="inputGroupFile01">Choose file</label>
                            @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </p>
                <div class="form-group">
                    <div>
                        <input type="submit" value="Save" class="btn btn-black py-3 px-5" />
                    </div>
                </div>
                </div>
            </div>
</section>
</div>
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
